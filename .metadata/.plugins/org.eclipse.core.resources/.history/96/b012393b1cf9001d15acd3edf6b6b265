package com.skillstorm.configuration;

import org.springframework.context.annotation.Bean;

import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
//@EnableGlobalMethodSecurity(jsr250Enabled = true, prePostEnabled = true)
public class SecurityConfig {

	@Bean
	public SecurityFilterChain securityFilterChain(HttpSecurity httpSecurity) throws Exception {
		
		 http
         .authorizeRequests()
             .antMatchers("/registration").permitAll()
             .anyRequest().authenticated()
             .and()
         .formLogin()
             .loginPage("/login")
             .permitAll()
             .and()
         .logout()
             .permitAll();
		
		httpSecurity
        .authorizeRequests()
        .mvcMatchers("/users").permitAll()
        .anyRequest().authenticated()
        .anyRequest().permitAll();
        //.anyRequest().authenticated();
           // .antMatchers("/public/**").permitAll()
           // .antMatchers("/private/**").authenticated();
		
		httpSecurity.httpBasic();
		httpSecurity.csrf().disable();
		return httpSecurity.build();
	}
	@Bean
	public PasswordEncoder passwordEncoder() {
		return new BCryptPasswordEncoder(10);
	}
	
}
